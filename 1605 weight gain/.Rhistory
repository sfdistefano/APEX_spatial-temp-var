source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/agz_dmi_diet comp.R", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/spatVar_pub figures_wt gain.R", echo = TRUE)
# Load necessary libraries
library(data.table)
library(tidyverse)
library(patchwork)
library(ggsci)  # For nejm color palette
# Define years of interest
years <- 2014:2018
# ----- PROCESSING FOR DRY MATTER INTAKE -----
process_agz_data <- function(file_path, source_label) {
fread(file_path, fill = TRUE, skip = 8, header = TRUE, check.names = TRUE) %>%
filter(YR %in% years) %>%
mutate(Treatment = ifelse(HERD %in% 1:10, "TRM", "CARM")) %>%
group_by(YR, Treatment, HERD, ID) %>%
summarize(total_dmi = sum(DMIkg.hd), .groups = "drop") %>%
group_by(YR, Treatment, HERD) %>%
summarize(herd_dmi = sum(total_dmi), .groups = "drop") %>%
group_by(YR, Treatment) %>%
summarize(trt_dmi = mean(herd_dmi), .groups = "drop") %>%
mutate(Source = source_label,
Group = factor(paste(Treatment, source_label, sep = "-")))
}
# File paths for DMI
file_noVar_dmi <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all20_noCAGbm/CONUNN_TGM.AGZ"
file_spatVar_dmi <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all92_noCAGbm/CONUNN_TGM.AGZ"
# Process DMI
agz_noVar_dmi <- process_agz_data(file_noVar_dmi, "NoVar")
agz_spatVar_dmi <- process_agz_data(file_spatVar_dmi, "SpatVar")
dmi_combined <- rbind(agz_noVar_dmi, agz_spatVar_dmi)
library(tidyverse)
library(reshape2)
library(data.table)
library(ggsci)
library(hydroGOF)
library(patchwork)
library(cowplot)
##### ANNUAL GRAZING FILE (.AGZ) ###############################################
# Importing reference information for pastures
PastureID_92sa <- read.csv("C:/APEX data and scripts/Data/PastureID_ecosite_92subareas.csv")
PastureID_20sa <- read.csv("C:/APEX data and scripts/Data/PastureID_ecosite_20subareas.csv")
## Importing observed annual mean weight gain data
observed_weight_data <- read.csv("C:/APEX data and scripts/Data/CPER Cattle/CARM_Cattle Weight Gains_2014-2023_SD.csv") %>%
mutate(gain = ADG / 2.2046) %>%  # Converting from lbs to kg
merge(PastureID_20sa, by = 'Pasture',
relationship = "many-to-many", all.x = TRUE) %>%
mutate(Treatment = ifelse(ID %in% c(1:10), "TRM", "CARM"))
# Summarizing observed data for each treatment type
observed_weight_data_filtered <- observed_weight_data %>%
select(Year, Treatment, gain) %>%
filter(Year %in% c(2014:2018)) %>%
group_by(Year, Treatment) %>%
summarize(MeanWT = mean(gain, na.rm = TRUE),
SD = sd(gain),
Type = "Measured", .groups = 'drop')
### Function to read and process simulated data by grazing treatment
prepare_weight_data_agz <- function(file_path, years, id_filter,
sim_type, Pasture_data) {
data.table::fread(file_path, fill = TRUE, skip = 8, header = TRUE, check.names = TRUE) %>%
filter(YR %in% years, ID %in% id_filter) %>%
left_join(Pasture_data, by = "ID") %>%
group_by(YR, Treatment) %>%
summarize(MeanWT = mean(WTGkg.hd.d, na.rm = TRUE)) %>%
mutate(Type = sim_type, SD = 0) %>%
rename(Year = YR)
}
## Importing simulated data using the reusable function
years <- c(2014:2018)
# Baseline simulation scenario
grazing_weight_data_noVar_yearly <- prepare_weight_data_agz(
"C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all20_noCAGbm/CONUNN_TGM.AGZ",
years, 1:20, Pasture_data = PastureID_20sa,
"Simulated: no variability"
)
# Spatial variability simulation scenario
grazing_weight_data_spatVar_yearly <- prepare_weight_data_agz(
"C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all92_noCAGbm/CONUNN_TGM.AGZ",
years, 1:92, Pasture_data = PastureID_92sa,
"Simulated: spatial variability"
)
## Combining all grazing observed and simulated data
grazing_weight_data_yearly <- rbind(
observed_weight_data_filtered,
grazing_weight_data_noVar_yearly,
grazing_weight_data_spatVar_yearly
)
View(grazing_weight_data_yearly)
?pivot_wider
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
names_from = Type,
values_from = MeanWT)
View(avgWtGain_compare)
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment, SD),
names_from = Type,
values_from = MeanWT)
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
names_from = Type,
values_from = MeanWT)
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
names_from = Type,
values_from = MeanWT) %>%
inner_join(observed_weight_data_filtered)
?inner_join
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
names_from = Type,
values_from = MeanWT) %>%
inner_join(observed_weight_data_filtered) %>%
select(-MeanWT, -Type) %>%
rename(uncertainty = SD)
## Combining all grazing observed and simulated data
grazing_weight_data_yearly <- rbind(
observed_weight_data_filtered,
grazing_weight_data_noVar_yearly,
grazing_weight_data_spatVar_yearly
)
grazing_weight_data_yearly
avgWtGain_compare <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
names_from = Type,
values_from = MeanWT) %>%
inner_join(observed_weight_data_filtered) %>%
select(-MeanWT, -Type) %>%
rename(measured_SD = SD)
getwd()
write.csv(avgWtGain_compare, "avgWtGain_compare.csv")
### Harmel GOF Metrics
comparison_df_yearly <- grazing_weight_data_yearly %>%
pivot_wider(id_cols = c(Year:Treatment),
values_from = c(MeanWT:SD),
names_from = "Type") %>%
select(-"SD_Simulated: no variability", -"SD_Simulated: spatial variability") %>%
rename(uncertainty = SD_Measured,
observed = MeanWT_Measured) %>%
pivot_longer(cols = c("MeanWT_Simulated: no variability":"MeanWT_Simulated: spatial variability"),
names_to = "Sim.Type",
values_to = "simulated") %>%
mutate(Sim.Type = recode(Sim.Type,
"MeanWT_Simulated: no variability"="No Variability",
"MeanWT_Simulated: spatial variability"="Spatial Variability"))
View(comparison_df_yearly)
## Linear regression analysis
mod_dwg <- lm(DWG ~ Simulation * Treatment + as.factor(Y), grazing_weight_data_daily)
summary(mod_dwg)
## Linear regression analysis
mod_dwg <- lm(DWG ~ Simulation * Treatment + Y, grazing_weight_data_daily)
summary(mod_dwg)
mod_dwg <- lm(DWG ~ Simulation * Treatment + as.factor(Y), grazing_weight_data_daily)
summary(mod_dwg)
# Load necessary libraries
library(data.table)
library(tidyverse)
library(patchwork)
library(ggsci)  # For nejm color palette
# Define years of interest
years <- 2014:2018
# ----- PROCESSING FOR DRY MATTER INTAKE -----
process_agz_data <- function(file_path, source_label) {
fread(file_path, fill = TRUE, skip = 8, header = TRUE, check.names = TRUE) %>%
filter(YR %in% years) %>%
mutate(Treatment = ifelse(HERD %in% 1:10, "TRM", "CARM")) %>%
group_by(YR, Treatment, HERD, ID) %>%
summarize(total_dmi = sum(DMIkg.hd), .groups = "drop") %>%
group_by(YR, Treatment, HERD) %>%
summarize(herd_dmi = sum(total_dmi), .groups = "drop") %>%
group_by(YR, Treatment) %>%
summarize(trt_dmi = mean(herd_dmi), .groups = "drop") %>%
mutate(Source = source_label,
Group = factor(paste(Treatment, source_label, sep = "-")))
}
# File paths for DMI
file_noVar_dmi <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all20_noCAGbm/CONUNN_TGM.AGZ"
file_spatVar_dmi <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all92_noCAGbm/CONUNN_TGM.AGZ"
# Process DMI
agz_noVar_dmi <- process_agz_data(file_noVar_dmi, "NoVar")
agz_spatVar_dmi <- process_agz_data(file_spatVar_dmi, "SpatVar")
dmi_combined <- rbind(agz_noVar_dmi, agz_spatVar_dmi)
custom_colors <- c(
"TRM-NoVar" = "#E69F00", "TRM-SpatVar" = "#CC6600",
"CARM-NoVar" = "#009E73", "CARM-SpatVar" = "#007360"
)
dmi_combined$Group <- factor(dmi_combined$Group, levels = names(custom_colors))
# DMI Plot
plot_dmi <- ggplot(dmi_combined, aes(x = as.factor(YR), y = trt_dmi, fill = Group)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.7) +
labs(x = "Year", y = "Annual Dry Matter Intake (kg/hd/year)", fill = "Treatment-Simulation") +
theme_minimal() +
scale_fill_manual(values = custom_colors, drop = FALSE) +
theme(text = element_text(size = 20, family = "serif"), legend.position = "right") +
scale_x_discrete(labels = years)
# ----- PROCESSING FOR MEAN PERCENTAGE -----
process_data <- function(file_path, simulation_label) {
data <- fread(file_path, fill = TRUE, skip = 8, header = TRUE, check.names = TRUE) %>%
filter(YR %in% years) %>%
mutate(
Treatment = ifelse(HERD <= 10, "TRM", "CARM"),
Intake = GZSLkg.ha + GZSDkg.ha,
Simulation = simulation_label
)
herd_summary <- data %>%
group_by(YR, HERD, Treatment, CPNM, Simulation) %>%
summarise(HerdIntake = sum(Intake, na.rm = TRUE), .groups = "drop")
herd_totals <- herd_summary %>%
group_by(YR, HERD, Simulation) %>%
summarise(TotalIntake = sum(HerdIntake), .groups = "drop")
# FIXED: Now correctly joining herd_summary with herd_totals
herd_percent <- herd_summary %>%
left_join(herd_totals, by = c("YR", "HERD", "Simulation")) %>%
mutate(Percentage = 100 * HerdIntake / TotalIntake)
treatment_summary <- herd_percent %>%
group_by(YR, Treatment, CPNM, Simulation) %>%
summarise(
MeanPercentage = mean(Percentage, na.rm = TRUE),
SE = sd(Percentage, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
return(treatment_summary)
}
# File paths for percentage
file_base <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all20_noCAGbm/CONUNN_TGM.AGZ"
file_spatial <- "C:/Users/Sean.DiStefano/Downloads/APEX1605_NEW/APEX1605_CO_all92_noCAGbm/CONUNN_TGM.AGZ"
# Process percentage data
data_base <- process_data(file_base, "No Variability")
data_spatial <- process_data(file_spatial, "Spatial Variability")
combined_data <- rbind(data_base, data_spatial)
# Percentage Plot
plot_percentage <- ggplot(combined_data, aes(x = as.factor(YR), y = MeanPercentage, fill = CPNM)) +
geom_bar(stat = "identity", position = "stack") +
facet_grid(Treatment ~ Simulation) +
labs(x = "Year", y = "Mean Percentage of Total Intake (% weight)", fill = "Plant Group") +
theme_minimal() +
theme(text = element_text(family = "serif", size = 20)) +
scale_fill_nejm(name = "Plant Group")
# ----- COMBINE BOTH PLOTS -----
combined_plot <- (plot_dmi / plot_percentage) +
plot_annotation(tag_levels = 'a', tag_prefix = "(", tag_suffix = ") ")
# Print combined plot
combined_plot
## Linear regression analysis
mod_dietComp <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dietComp)
# Post-hoc analysis of pair-wise contrasts
pairs(mod_dietComp, adjust = "tukey", reverse = TRUE)
mod_dietComp_df <- mod_dietComp %>%
as.data.frame()
# Get estimated marginal means from each model
emm_dietComp <- emmeans(model_dietComp, ~ Sim.Type | CPNM * Treatment)
library(emmeans)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(model_dietComp, ~ Sim.Type | CPNM * Treatment)
## Linear regression analysis
mod_dietComp <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dietComp)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(model_dietComp, ~ Sim.Type | CPNM * Treatment)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Sim.Type | CPNM * Treatment)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Simulation | CPNM * Treatment)
# Post-hoc analysis of pair-wise contrasts
pairs(emm_dietComp, adjust = "tukey", reverse = TRUE)
mod_dmi <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dmi)
mod_dmi <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dmi)
mod_dmi <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dmi)
mod_dmi <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, dmi_combined)
View(combined_data)
View(dmi_combined)
colnames(dmi_combined)
mod_dmi <- lm(trt_dmi ~ Source  * Treatment + YR, dmi_combined)
summary(mod_dmi)
mod_dmi <- lm(trt_dmi ~ Source  * Treatment + as.factor(YR), dmi_combined)
summary(mod_dmi)
View(grazing_weight_data_yearly)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/agz_dmi_diet comp.R", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/agz_dmi_diet comp.R", echo = TRUE)
summary(mod_dietComp)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/spatVar_pub figures_wt gain.R", echo = TRUE)
# Print the combined plot
print(ggplot_grazing_yearly)
source("~/.active-rstudio-document", echo = TRUE)
library(hydroGOF)
source("~/.active-rstudio-document", echo = TRUE)
## Linear regression analysis
mod_dietComp <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dietComp)
mod_dmi <- lm(trt_dmi ~ Source  * Treatment + as.factor(YR), dmi_combined)
summary(mod_dmi)
mod_dmi <- lm(trt_dmi ~ Source  * Treatment + as.factor(YR), dmi_combined)
summary(mod_dmi)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Simulation | CPNM * Treatment)
## Linear regression analysis
mod_dietComp <- lm(MeanPercentage ~ Simulation * CPNM * Treatment + YR, combined_data)
summary(mod_dietComp)
# Post-hoc analysis of pair-wise contrasts
pairs(emm_dietComp, adjust = "tukey", reverse = TRUE)
# Overall comparison of plant groups
em_cp <- emmeans(mod_dietComp, ~ CPNM)
# Comparison within each Treatment group
em_cp_trt <- emmeans(mod_dietComp, ~ CPNM | Treatment)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Simulation | CPNM * Treatment)
# Post-hoc analysis of pair-wise contrasts
pairs(emm_dietComp, adjust = "tukey", reverse = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
?lm
citation()
citation(lme4)
citation("lme4")
install.packages("emmeans")
citation()
# Display
final_plot
# Print summary
print(treatment_accuracy_summary)
# Print the combined plot
print(ggplot_grazing_yearly)
# Create a bar plot with error bars
# Create combined ggplot for TRM and CARM
ggplot_grazing_yearly <- ggplot(grazing_weight_data_yearly, aes(x = factor(Year), y = MeanWT, fill = Type)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Bars for mean weight
geom_errorbar(aes(ymin = MeanWT - SD, ymax = MeanWT + SD),
position = position_dodge(width = 0.9), width = 0.25) +  # Error bars
facet_wrap(~ Treatment) +  # Facet by Treatment (TRM and CARM)
labs(x = "Year",
y = "Mean Daily Weight Gain (kg/head/day)",
fill = "Data Source") +  # Labels and legend title
theme_bw() +   # Clean theme
scale_fill_npg() +
theme(text = element_text(size = 15, family = 'serif'))
library(tidyverse)
library(reshape2)
library(data.table)
library(ggsci)
library(hydroGOF)
library(patchwork)
library(cowplot)
# Create a bar plot with error bars
# Create combined ggplot for TRM and CARM
ggplot_grazing_yearly <- ggplot(grazing_weight_data_yearly, aes(x = factor(Year), y = MeanWT, fill = Type)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +  # Bars for mean weight
geom_errorbar(aes(ymin = MeanWT - SD, ymax = MeanWT + SD),
position = position_dodge(width = 0.9), width = 0.25) +  # Error bars
facet_wrap(~ Treatment) +  # Facet by Treatment (TRM and CARM)
labs(x = "Year",
y = "Mean Daily Weight Gain (kg/head/day)",
fill = "Data Source") +  # Labels and legend title
theme_bw() +   # Clean theme
scale_fill_npg() +
theme(text = element_text(size = 15, family = 'serif'))
# Print the combined plot
print(ggplot_grazing_yearly)
p1 <- ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'CARM', ], aes(x = Date)) +
geom_line(aes(y = DWG, color = Simulation), show.legend = FALSE) +
scale_color_npg() +
theme_minimal() +
ylab("Daily Weight Gain (kg/hd/day)") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
# Daily Weight Gain - TRM (no legend)
p2 <- ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'TRM', ], aes(x = Date)) +
geom_line(aes(y = DWG, color = Simulation)) +
scale_color_npg() +
theme_minimal() +
ylab("") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
combined_plot <- (p1 + p2)
# Add column labels using cowplot
title_row <- cowplot::plot_grid(
cowplot::ggdraw() +
cowplot::draw_label("CARM", fontface = "bold",
fontfamily = "serif", size = 16, hjust = 0.5),
cowplot::ggdraw() +
cowplot::draw_label("TRM", fontface = "bold",
fontfamily = "serif", size = 16, hjust = 0,
x = 0.3),
ncol = 2
)
# Stack column labels above combined figure
final_plot <- cowplot::plot_grid(
title_row,
combined_plot,
ncol = 1,
rel_heights = c(0.05, 1)
)
# Display
final_plot
ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'CARM', ],
aes(x = Date, y = DWG, color = Simulation),
show.legend = FALSE) +
geom_smooth() +
scale_color_npg() +
theme_minimal() +
ylab("Daily Weight Gain (kg/hd/day)") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'TRM', ],
aes(x = Date, y = DWG, color = Simulation)) +
geom_smooth() +
scale_color_npg() +
theme_minimal() +
ylab("") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
?geom_smooth
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'CARM', ],
aes(x = Date, y = DWG, color = Simulation),
show.legend = FALSE) +
geom_smooth() +
scale_color_npg() +
theme_minimal() +
ylab("Daily Weight Gain (kg/hd/day)") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
p1 <- ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'CARM', ],
aes(x = Date, y = DWG, color = Simulation),
show.legend = FALSE) +
geom_smooth() +
scale_color_npg() +
theme_minimal() +
ylab("Daily Weight Gain (kg/hd/day)") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
p2 <- ggplot(grazing_weight_data_daily[grazing_weight_data_daily$Treatment == 'TRM', ],
aes(x = Date, y = DWG, color = Simulation)) +
geom_smooth() +
scale_color_npg() +
theme_minimal() +
ylab("") +
xlab("") +
facet_wrap(~ year(Date), scales = "free_x") +
theme(
text = element_text(size = 15, family = 'serif'),
plot.title = element_blank()
)
title_row <- cowplot::plot_grid(
cowplot::ggdraw() +
cowplot::draw_label("CARM", fontface = "bold",
fontfamily = "serif", size = 16, hjust = 0.5),
cowplot::ggdraw() +
cowplot::draw_label("TRM", fontface = "bold",
fontfamily = "serif", size = 16, hjust = 0,
x = 0.3),
ncol = 2
)
combined_plot <- (p1 + p2)
combined_plot
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/spatVar_pub figures_wt gain.R", echo = TRUE)
# --- Publication Export (PNG at 300 dpi) ---
# Export plot
ggsave(
filename = "C:/Users/Sean.DiStefano/Documents/GitHub/APEX_spatial-temp-var/1605 weight gain/Figure_animal weight.png",
plot = final_plot,
width = 15,       # width in inches
height = 7,      # height in inches
dpi = 300,       # publication resolution
units = "in",
bg = "white"     # ensure transparent background is not used
)
# Print the combined plot
print(ggplot_grazing_yearly)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/agz_dmi_diet comp.R", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 weight gain/agz_dmi_diet comp.R", echo = TRUE)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Simulation | CPNM * Treatment)
library(emmeans)
# Get estimated marginal means from each model
emm_dietComp <- emmeans(mod_dietComp, ~ Simulation | CPNM * Treatment)
# Post-hoc analysis of pair-wise contrasts
pairs(emm_dietComp, adjust = "tukey", reverse = TRUE)
# Dry matter intake
mod_dmi <- lm(trt_dmi ~ Source  * Treatment + as.factor(YR), dmi_combined)
summary(mod_dmi)
View(dmi_combined)
