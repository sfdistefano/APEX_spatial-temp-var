library(tidyverse)
library(lubridate)
library(rstatix)
library(ggpubr)

setwd("D:/APEX data and scripts/Data")

# reference information
PastureID <- read.csv("D:/APEX data and scripts/Data/PastureID_ecosite_20subareas.csv")

# observed biomass data (clipped biomass)
biomass <- read.csv("D:/APEX data and scripts/Data/CPER Biomass/CARM_Biomass_Widecln_attr_2024-03-26.csv",
                    header = T) %>%
  select(2:13,17) %>%
  mutate(TOTAL = AG+WSPG+C3PG+SS+SD+BOBU+FORB) %>%
  mutate(WSPG = (BOBU+WSPG)/2) %>%
  dplyr::rename(CSAG = AG, CSPG = C3PG,
                Year = YearSampled) %>%
  filter(Year %in% c(2014:2023)) %>%
  pivot_longer(cols = c(CSAG:SS, TOTAL),
               names_to = "APEXcodeFG", values_to = "v1") %>%
  group_by(Year,Pasture,Treatment,APEXcodeFG) %>%
  dplyr::summarize(MeankgPerHa = round(mean(v1), 2),
                   StdkgPerHa = sd(v1)) %>%
  filter(APEXcodeFG %in% c("WSPG", "CSPG", "SS", "FORB", "CSAG") &
           Treatment %in% c("AGM","TGM"))%>%
  mutate(Type = "Observed", M = 8, D = 6,
         water_stress = 1, temp_stress = 1,
         APEXcodeFG=as.character(APEXcodeFG)) %>%
  mutate(Date = ymd(paste(Year, M, D, sep = "-")))  # shift date by one year

# observed basal area (collected from line-point-intercept)
# basal.area <- read.csv("D:/APEX data and scripts/APEX inputs/input_CANOPY.DAT_subareas92_05072024.csv") %>%
#   group_by(Year, Treatment, Pasture, apex.code) %>%
#   summarize(apex.input = round(mean(apex.input),2)) %>%
#   filter(Year %in% c(2014:2023))

basal.area <- read.csv("D:/APEX data and scripts/APEX inputs/input_CANOPY.DAT_subareas92_05072024.csv") %>%
  group_by(Year, Treatment, Pasture, apex.code) %>%
  summarize(apex.input = round(mean(apex.input),2)) %>%
  filter(Year %in% c(2014:2023)) %>%
  mutate(Year_lag = Year + 1) %>%
  ungroup() %>%
  select(-Year) %>%
  rename(Year = Year_lag)

#### preparing data ############################################################
## adding APEX codes for functional groups
# functional group code in APEX from CROP.DAT 
apex.code <- c(300,300,310,321,330,340) 
apex.FG <- c("WSPG", "BOBU", "CSPG", "CSAG", "FORB", "SS") # functional group name

APEX.codes <- data.frame(apex.code, apex.FG)

biomass_v02 <- merge(biomass, APEX.codes,
                             by.x = "APEXcodeFG", by.y = "apex.FG") %>%
  filter(!(APEXcodeFG == "SS"))

# combining vegetation data into one dataframe
veg.data <- merge(biomass_v02, basal.area,
                  by = c( "Year", "Treatment", "Pasture", "apex.code")) %>%
  merge(PastureID, by = c("Treatment", "Pasture")) %>%
  select(Year, Treatment, Ecosite, Pasture, apex.code, MeankgPerHa, apex.input) %>%
  rename(biomass = MeankgPerHa,
         basal.area = apex.input) %>%
  mutate(apex.code = as.character(apex.code))

# identifying outliers
veg.list <- split(veg.data, f = veg.data$apex.code)

# Formula equation to force intercept through 0
intercept0 <- (y ~ 0 + x)

# applying ggplot to each functional group
plot.lm <- function(x) {

  lm.data <- x
  code <- lm.data$apex.code %>% unique()
  title <- paste("APEX code:", code, "1-Year Lag",sep = " ")

  plot <- ggplot(lm.data, aes(x = biomass, y = basal.area)) +
    geom_point() +
    geom_smooth(method = 'lm', se = TRUE, formula = intercept0) +
    stat_regline_equation(formula = intercept0, 
                          label.y = 25, aes(label = ..eq.label..)) +
    stat_regline_equation(formula = intercept0,
                          label.y = 20, aes(label = ..rr.label..)) +
    ggtitle(title) +
    theme_bw() +
    ylab("Basal Area (%): 1-Year Lag") +
    xlab("Biomass (kg/ha)")

  return(plot)
}

lapply(veg.list, FUN = plot.lm)
