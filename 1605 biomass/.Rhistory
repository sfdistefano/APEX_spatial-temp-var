rename(simulated = biomass_pasture) %>%
select(Date, Treatment, Pasture, CPNM, Y, Sim.Type, simulated)
obs <- obs_data %>%
rename(observed = biomass_pasture) %>%
select(Date, Treatment, Pasture, CPNM, Y, observed, uncertainty)
# Join observed and simulated data
comparison_df <- inner_join(sim, obs,
by = c("Date", "Treatment", "Pasture", "CPNM", "Y"))
# Apply Modification 1 logic
results_df <- comparison_df %>%
mutate(
lower = observed - uncertainty,
upper = observed + uncertainty,
adj_error = case_when(
simulated >= lower & simulated <= upper ~ 0,
simulated < lower ~ lower - simulated,
simulated > upper ~ simulated - upper
),
squared_adj_error = adj_error^2,
within_bounds = simulated >= lower & simulated <= upper
)
# Calculate global metrics
n <- nrow(results_df)
rmse_mod1 <- sqrt(mean(results_df$squared_adj_error, na.rm = TRUE))
obs_var <- var(results_df$observed, na.rm = TRUE)
nse_mod1 <- 1 - (sum(results_df$squared_adj_error, na.rm = TRUE) / (n * obs_var))
percent_within <- mean(results_df$within_bounds, na.rm = TRUE) * 100
return(list(
RMSE_Mod1 = rmse_mod1,
NSE_Mod1 = nse_mod1,
Percent_Within = percent_within,
Detailed_Comparison = results_df
))
}
## Results for No Var. (i.e., baseline) scenario
results_no_var <- harmel_mod1_gof(
sim_data = biomass_simulated_Aug12 %>% filter(Sim.Type == "No Variability"),
obs_data = biomass_observed_pasture
)
# View the metrics
results_no_var$RMSE_Mod1
results_no_var$NSE_Mod1
results_no_var$Percent_Within
## Results for Spatial Var. scenario
results_spatial_var <- harmel_mod1_gof(
sim_data = biomass_simulated_Aug12 %>% filter(Sim.Type == "Spatial Variability"),
obs_data = biomass_observed_pasture
)
# View the metrics
results_spatial_var$RMSE_Mod1
results_spatial_var$NSE_Mod1
results_spatial_var$Percent_Within
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
# Select the relevant data from the 'biomass_spatial' dataset and process it
biomass_spatial_Aug12_plot <- biomass_spatial %>%
# Group the data by specific columns to prepare for cumulative calculations
group_by(Treatment, ID, CPNM, Y) %>%
# Arrange the grouped data by date
arrange(Date) %>%
# Calculate the cumulative sum of biomass (DDMkg_ha) for each group
mutate(cumulative_DDMkg_ha = cumsum(DDMkg_ha)) %>%
# Remove the grouping structure to return to a regular data frame
ungroup() %>%
# Filter the data to include only observations from August 12
filter(month(Date) == 8, day(Date) == 12) %>%
# Further filter to include only specific categories of CPNM
filter(CPNM %in% c("CSPG", "WSPG", "FRB3", "VUOC")) %>%
# Recode values in the CPNM column to new categories for clarity
mutate(CPNM = recode(CPNM,
"VUOC" = "CSAG",
"FRB3" = "FORB")) %>%
mutate(Sim.Type = "Spatial Variability")
View(biomass_spatial_Aug12_plot)
View(biomass_observed)
# Select the relevant data from the 'biomass_spatial' dataset and process it
biomass_spatial_Aug12_plot <- biomass_spatial %>%
# Group the data by specific columns to prepare for cumulative calculations
group_by(Treatment, ID, CPNM, Y) %>%
# Arrange the grouped data by date
arrange(Date) %>%
# Calculate the cumulative sum of biomass (DDMkg_ha) for each group
mutate(cumulative_DDMkg_ha = cumsum(DDMkg_ha)) %>%
# Remove the grouping structure to return to a regular data frame
ungroup() %>%
# Filter the data to include only observations from August 12
filter(month(Date) == 8, day(Date) == 12) %>%
# Further filter to include only specific categories of CPNM
filter(CPNM %in% c("CSPG", "WSPG", "FRB3", "VUOC")) %>%
# Recode values in the CPNM column to new categories for clarity
mutate(CPNM = recode(CPNM,
"VUOC" = "CSAG",
"FRB3" = "FORB")) %>%
mutate(Sim.Type = "Spatial Variability") %>%
select(Y, Treatment, Pasture, Plot, CPNM, cumulative_DDMkg_ha, Sim.Type, Date)
str(biomass_observed)
glimpse(biomass_observed)
glimpse(biomass_spatial_Aug12_plot)
harmel_mod2_plot_scale <- function(sim_data, obs_data) {
library(dplyr)
# Standardize variable names
sim <- sim_data %>%
rename(simulated = cumulative_DDMkg_ha) %>%
mutate(Y = as.integer(Y)) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, Sim.Type, simulated)
obs <- obs_data %>%
rename(observed = MeankgPerHa_plot) %>%
mutate(Y = as.integer(Y)) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, observed, uncertainty)
# Join simulated and observed data
comparison_df <- inner_join(sim, obs, by = c("Date", "Y", "Treatment", "Pasture", "Plot", "CPNM"))
# Apply Mod 2 logic
results_df <- comparison_df %>%
mutate(
P = pnorm(simulated, mean = observed, sd = uncertainty),
P_adj = ifelse(P > 0.5, 1 - P, P),
adjusted_error = (1 - 2 * P_adj)^2,
# Add 90% CI bounds
lower_90 = observed - 1.645 * uncertainty,
upper_90 = observed + 1.645 * uncertainty,
within_90 = simulated >= lower_90 & simulated <= upper_90
)
# Summary by CPNM
summary_by_cpnm <- results_df %>%
group_by(CPNM) %>%
summarise(
n = n(),
RMSE_Mod2 = sqrt(mean(adjusted_error, na.rm = TRUE)),
Mean_P = mean(P, na.rm = TRUE),
Percent_Within_90 = mean(within_90, na.rm = TRUE) * 100,
.groups = "drop"
)
return(list(
Summary = summary_by_cpnm,
Detailed = results_df
))
}
plot_mod2_results <- harmel_mod2_plot_scale(
sim_data = spatial_simulated_plot_df,   # your 1,840-row dataframe
obs_data = observed_plot_df             # your 1,872-row dataframe
)
plot_mod2_results <- harmel_mod2_plot_scale(
sim_data = biomass_spatial_Aug12_plot,   # your 1,840-row dataframe
obs_data = biomass_observed             # your 1,872-row dataframe
)
print(plot_mod2_results$Summary)
# Barplot 1: RMSE_Mod2
ggplot(plot_summary, aes(x = CPNM, y = RMSE_Mod2, fill = CPNM)) +
geom_bar(stat = "identity", width = 0.6) +
labs(title = "RMSE_Mod2 by CPNM (Plot Scale)",
y = "RMSE_Mod2", x = "CPNM") +
theme_minimal() +
theme(legend.position = "none")
# Use your summary table (from plot_mod2_results$Summary)
plot_summary <- plot_mod2_results$Summary
# Barplot 1: RMSE_Mod2
ggplot(plot_summary, aes(x = CPNM, y = RMSE_Mod2, fill = CPNM)) +
geom_bar(stat = "identity", width = 0.6) +
labs(title = "RMSE_Mod2 by CPNM (Plot Scale)",
y = "RMSE_Mod2", x = "CPNM") +
theme_minimal() +
theme(legend.position = "none")
# Barplot 2: Mean_P
ggplot(plot_summary, aes(x = CPNM, y = Mean_P, fill = CPNM)) +
geom_bar(stat = "identity", width = 0.6) +
labs(title = "Mean Probability (P) by CPNM (Plot Scale)",
y = "Mean_P", x = "CPNM") +
geom_hline(yintercept = 0.5, linetype = "dashed", color = "gray40") +
theme_minimal() +
theme(legend.position = "none")
# Barplot 3: Percent Within 90% CI
ggplot(plot_summary, aes(x = CPNM, y = Percent_Within_90, fill = CPNM)) +
geom_bar(stat = "identity", width = 0.6) +
labs(title = "Percent Within 90% CI by CPNM (Plot Scale)",
y = "% Within 90% CI", x = "CPNM") +
geom_hline(yintercept = 90, linetype = "dotted", color = "gray50") +
theme_minimal() +
theme(legend.position = "none")
test <- merge(biomass_spatial_Aug12_plot, observed_biomass, all = TRUE)
test <- merge(biomass_spatial_Aug12_plot, biomass_observed, all = TRUE)
View(test)
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_biomass_accumulated.R", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
source("~/.active-rstudio-document", echo = TRUE)
print(summary_plot_spatial)
# Barplot: Willmott's d
ggplot(summary_all, aes(x = CPNM, y = Willmott_d_Mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Willmott's d (Modification 2)", y = "Willmott's d", x = "CPNM", fill = "Simulation") +
#ylim(0, 1) +
theme_minimal()
source("~/.active-rstudio-document", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_plant stress.R", echo = TRUE)
??emeans
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_plant stress.R", echo = TRUE)
View(resid_all)
lm1 <- lm(squared_error ~ Sim.Type * CPNM + Y, data = resid_all)
summary(lm1)
lm1 <- lm(simulated ~ observed * CPNM + Y, data = resid_all)
summary(lm1)
glimpse(biomass_simulated_Aug12)
glimpse(biomass_observed_pasture)
source("~/.active-rstudio-document", echo = TRUE)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
mod2_summary <- comparison_df %>%
group_by(Sim.Type, CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup()
# Print results
print(mod2_summary)
# Optional: Barplot of Willmott's d
ggplot(mod2_summary, aes(x = CPNM, y = d_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Willmott's Index of Agreement (Modification 2)",
y = "d (Mod 2)", x = "CPNM", fill = "Simulation Type") +
theme_minimal()
# Optional: Barplot of NSE
ggplot(mod2_summary, aes(x = CPNM, y = NSE_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Nash-Sutcliffe Efficiency (Modification 2)",
y = "NSE (Mod 2)", x = "CPNM", fill = "Simulation Type") +
theme_minimal()
# Prepare the simulated data
sim_data_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
sim_data_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = cumulative_DDMkg_ha) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
# Prepare the observed data
obs_data_clean <- biomass_observed_plot %>%
rename(observed = MeankgPerHa_plot) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, uncertainty)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
# Compute GOF metrics for each Sim.Type and CPNM
mod2_summary <- comparison_df %>%
group_by(Sim.Type, CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup()
# Print results
print(mod2_summary)
# Compute GOF metrics for each Sim.Type and CPNM
mod2_summary <- comparison_df %>%
group_by(CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup()
# Print results
print(mod2_summary)
View(comparison_df)
# Prepare the simulated data
sim_data_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = cumulative_DDMkg_ha) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
# Prepare the observed data
obs_data_clean <- biomass_observed_plot %>%
rename(observed = MeankgPerHa_plot) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, uncertainty)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
# Compute GOF metrics for each Sim.Type and CPNM
mod2_summary <- compute_mod2_stats(comparison_df)
# Print results
print(mod2_summary)
glimpse(biomass_spatial_Aug12_plot)
glimpse(biomass_observed_plot)
source("~/.active-rstudio-document", echo = TRUE)
View(comparison_plot_df)
glimpse(comparison_df)
# Join simulated and observed
comparison_plot_df <- merge(
sim_plot_clean,
obs_plot_clean,
by = c("Date", "Y", "Treatment", "Pasture", "Plot", "CPNM")
)
sim_plot_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = cumulative_DDMkg_ha) %>%
mutate(Y = as.integer(Y)) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, Sim.Type, simulated)
# Prepare observed data
obs_plot_clean <- biomass_observed_plot %>%
rename(observed = MeankgPerHa_plot) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, observed, uncertainty) %>%
mutate(Y = as.integer(Y))
# Join simulated and observed
comparison_plot_df <- merge(
sim_plot_clean,
obs_plot_clean,
by = c("Date", "Y", "Treatment", "Pasture", "Plot", "CPNM")
)
# Sanity check
if (nrow(comparison_plot_df) == 0) {
stop("No matching rows in plot-level data. Check join keys.")
}
# Compute stats by CPNM (only one Sim.Type at this scale)
mod2_plot_summary <- comparison_plot_df %>%
group_by(CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup() %>%
mutate(Sim.Type = "Spatial Variability (Plot)")
# Output results
print(mod2_plot_summary)
glimpse(comparison_plot_df)
source("~/.active-rstudio-document", echo = TRUE)
# Define function for Modification 2 GOF metrics
compute_mod2_stats <- function(df) {
prob <- pnorm(df$simulated, mean = df$observed, sd = df$uncertainty)
prob_adj <- ifelse(prob > 0.5, 1 - prob, prob)
CF <- 1 - 2 * prob_adj
eu2i <- CF * 0.5 * abs(df$observed - df$simulated)
NSE_mod2 <- 1 - sum(eu2i^2) / sum((df$observed - mean(df$observed))^2)
d_mod2 <- 1 - sum(eu2i^2) / sum((abs(df$simulated - mean(df$observed)) + abs(df$observed - mean(df$observed)))^2)
RMSE_mod2 <- sqrt(mean(eu2i^2))
MAE_mod2 <- mean(abs(eu2i))
tibble(
NSE_mod2 = NSE_mod2,
d_mod2 = d_mod2,
RMSE_mod2 = RMSE_mod2,
MAE_mod2 = MAE_mod2
)
}
# Prepare the simulated data
sim_data_clean <- biomass_simulated_Aug12 %>%
rename(simulated = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
# Prepare the observed data
obs_data_clean <- biomass_observed_pasture %>%
rename(observed = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, uncertainty)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
# Compute GOF metrics for each Sim.Type and CPNM
mod2_summary <- comparison_df %>%
group_by(Sim.Type, CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup()
View(mod2_summary)
library(dplyr)
library(purrr)
library(ggplot2)
# Function for GOF stats with Modification 2
compute_mod2_stats <- function(df) {
prob <- pnorm(df$simulated, mean = df$observed, sd = df$uncertainty)
prob_adj <- ifelse(prob > 0.5, 1 - prob, prob)
CF <- 1 - 2 * prob_adj
eu2i <- CF * 0.5 * abs(df$observed - df$simulated)
NSE_mod2 <- 1 - sum(eu2i^2) / sum((df$observed - mean(df$observed))^2)
d_mod2 <- 1 - sum(eu2i^2) / sum((abs(df$simulated - mean(df$observed)) + abs(df$observed - mean(df$observed)))^2)
RMSE_mod2 <- sqrt(mean(eu2i^2))
MAE_mod2 <- mean(abs(eu2i))
tibble(
NSE_mod2 = NSE_mod2,
d_mod2 = d_mod2,
RMSE_mod2 = RMSE_mod2,
MAE_mod2 = MAE_mod2
)
}
# Prepare simulated data
sim_plot_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = cumulative_DDMkg_ha) %>%
mutate(Y = as.integer(Y)) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, Sim.Type, simulated)
# Prepare observed data
obs_plot_clean <- biomass_observed_plot %>%
rename(observed = MeankgPerHa_plot) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, observed, uncertainty) %>%
mutate(Y = as.integer(Y))
# Join simulated and observed
comparison_plot_df <- merge(
sim_plot_clean,
obs_plot_clean,
by = c("Date", "Y", "Treatment", "Pasture", "Plot", "CPNM")
)
View(comparison_plot_df)
glimpse(comparison_plot_df)
View(biomass_observed_plot)
# Function for GOF stats with Modification 2
compute_mod2_stats <- function(df) {
df <- df %>%
mutate(
# Assign a small default (e.g., 1) when uncertainty is NA or zero
uncertainty = ifelse(is.na(uncertainty) | uncertainty <= 0, 1, uncertainty)
)
prob <- pnorm(df$simulated, mean = df$observed, sd = df$uncertainty)
prob_adj <- ifelse(prob > 0.5, 1 - prob, prob)
CF <- 1 - 2 * prob_adj
eu2i <- CF * 0.5 * abs(df$observed - df$simulated)
NSE_mod2 <- 1 - sum(eu2i^2) / sum((df$observed - mean(df$observed))^2)
d_mod2 <- 1 - sum(eu2i^2) / sum((abs(df$simulated - mean(df$observed)) + abs(df$observed - mean(df$observed)))^2)
RMSE_mod2 <- sqrt(mean(eu2i^2))
MAE_mod2 <- mean(abs(eu2i))
tibble(
NSE_mod2 = NSE_mod2,
d_mod2 = d_mod2,
RMSE_mod2 = RMSE_mod2,
MAE_mod2 = MAE_mod2
)
}
# Prepare simulated data
sim_plot_clean <- biomass_spatial_Aug12_plot %>%
rename(simulated = cumulative_DDMkg_ha) %>%
mutate(Y = as.integer(Y)) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, Sim.Type, simulated)
# Prepare observed data
obs_plot_clean <- biomass_observed_plot %>%
rename(observed = MeankgPerHa_plot) %>%
select(Date, Y, Treatment, Pasture, Plot, CPNM, observed, uncertainty) %>%
mutate(Y = as.integer(Y))
# Join simulated and observed
comparison_plot_df <- merge(
sim_plot_clean,
obs_plot_clean,
by = c("Date", "Y", "Treatment", "Pasture", "Plot", "CPNM")
)
# Compute stats by CPNM (only one Sim.Type at this scale)
mod2_plot_summary <- comparison_plot_df %>%
group_by(CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup() %>%
mutate(Sim.Type = "Spatial Variability (Plot)")
View(mod2_plot_summary)
# Output results
print(mod2_plot_summary)
# Barplot: d
ggplot(mod2_plot_summary, aes(x = CPNM, y = d_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Willmott's d (Modification 2) — Plot Scale", y = "d (Mod 2)", x = "CPNM") +
theme_minimal()
# Barplot: NSE
ggplot(mod2_plot_summary, aes(x = CPNM, y = NSE_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Nash–Sutcliffe Efficiency (Modification 2) — Plot Scale", y = "NSE (Mod 2)", x = "CPNM") +
theme_minimal()
# Function for GOF stats with Modification 2
compute_mod2_stats <- function(df) {
df <- df %>%
mutate(
# Assign a small default (e.g., 1) when uncertainty is NA or zero
uncertainty = ifelse(is.na(uncertainty) | uncertainty <= 0, 1, uncertainty)
)
prob <- pnorm(df$simulated, mean = df$observed, sd = df$uncertainty)
prob_adj <- ifelse(prob > 0.5, 1 - prob, prob)
CF <- 1 - 2 * prob_adj
eu2i <- CF * 0.5 * abs(df$observed - df$simulated)
NSE_mod2 <- 1 - sum(eu2i^2) / sum((df$observed - mean(df$observed))^2)
d_mod2 <- 1 - sum(eu2i^2) / sum((abs(df$simulated - mean(df$observed)) + abs(df$observed - mean(df$observed)))^2)
RMSE_mod2 <- sqrt(mean(eu2i^2))
MAE_mod2 <- mean(abs(eu2i))
tibble(
NSE_mod2 = NSE_mod2,
d_mod2 = d_mod2,
RMSE_mod2 = RMSE_mod2,
MAE_mod2 = MAE_mod2
)
}
# Prepare the simulated data
sim_data_clean <- biomass_simulated_Aug12 %>%
rename(simulated = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
# Prepare the observed data
obs_data_clean <- biomass_observed_pasture %>%
rename(observed = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, uncertainty)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
View(comparison_df)
# Compute GOF metrics for each Sim.Type and CPNM
mod2_summary <- comparison_df %>%
group_by(Sim.Type, CPNM) %>%
group_modify(~ compute_mod2_stats(.x)) %>%
ungroup()
# Print results
print(mod2_summary)
# Optional: Barplot of Willmott's d
ggplot(mod2_summary, aes(x = CPNM, y = d_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Willmott's Index of Agreement (Modification 2)",
y = "d (Mod 2)", x = "CPNM", fill = "Simulation Type") +
theme_minimal()
# Optional: Barplot of NSE
ggplot(mod2_summary, aes(x = CPNM, y = NSE_mod2, fill = Sim.Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.7)) +
labs(title = "Nash-Sutcliffe Efficiency (Modification 2)",
y = "NSE (Mod 2)", x = "CPNM", fill = "Simulation Type") +
theme_minimal()
View(mod2_summary)
