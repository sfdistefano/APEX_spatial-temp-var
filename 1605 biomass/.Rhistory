biomass_spatial_plot_soilComp)
summary(model_biomass_soil)
emm_soil <- emmeans(model_biomass_soil, ~ apex_soilComp | CPNM)
pairs(emm_soil, adjust = "Tukey")
emm_soil <- as.data.frame(emm_soil)
ggplot(emm_soil, aes(x = apex_soilComp, y = emmean, color = apex_soilComp)) +
geom_point(size = 3, position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, position = position_dodge(width = 0.5)) +
facet_wrap(~ CPNM, scales = "free_y") +
labs(y = "Mean Estimated Biomass (kg/ha)",
x = "Soil Type") +
theme_minimal() +
scale_color_npg() +
theme(text = element_text(family = "serif", size = 15),
axis.text.x = element_text(angle = 45, hjust = 0.9)) +
guides(color = "none")
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
mutate(Soil = fct_recode(apex_soilComp, soil_labels)) %>%
ggplot(aes(x = Ecosite, y = n, fill = Soil)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
scale_fill_npg()
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = Soil)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
scale_fill_npg()
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
scale_fill_npg()
theme(text = element_text(family = "serif", size = 15) +
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme(text = element_text(family = "serif", size = 15)) +
theme_minimal() +
scale_fill_npg()
# Prepare and plot
PastureID_sa92_soilComp %>%
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme(text = element_text(family = "serif", size = 15)) +
theme_minimal() +
scale_fill_npg()
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme(text = element_text(family = "serif", size = 15)) +
theme_minimal() +
scale_fill_npg()
# Prepare and plot
PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
theme(text = element_text(family = "serif", size = 15)) +
scale_fill_npg()
combined_plot <- p1 / p2 +
plot_annotation(tag_levels = 'a')
combined_plot
p1 <- PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
theme(text = element_text(family = "serif", size = 15)) +
scale_fill_npg()
biomass_spatial_plot_soilComp <- biomass_summary_spatial_plot %>%
left_join(PastureID_sa92_soilComp)
model_biomass_soil <- lmer(cumulative_DDMkg_ha ~ apex_soilComp * CPNM + Y + # fixed effects
(1 | Block), # random effect
biomass_spatial_plot_soilComp)
summary(model_biomass_soil)
emm_soil <- emmeans(model_biomass_soil, ~ apex_soilComp | CPNM)
pairs(emm_soil, adjust = "Tukey")
emm_soil <- as.data.frame(emm_soil)
p2 <- ggplot(emm_soil, aes(x = apex_soilComp, y = emmean, color = apex_soilComp)) +
geom_point(size = 3, position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, position = position_dodge(width = 0.5)) +
facet_wrap(~ CPNM, scales = "free_y") +
labs(y = "Mean Estimated Biomass (kg/ha)",
x = "Soil Type") +
theme_minimal() +
scale_color_npg() +
theme(text = element_text(family = "serif", size = 15),
axis.text.x = element_text(angle = 45, hjust = 0.9)) +
guides(color = "none")
combined_plot <- p1 / p2 +
plot_annotation(tag_levels = 'a')
combined_plot
getwd()
# Save combined plot as high-resolution PNG
ggsave("soil_type_panels.png",
plot = combined_plot,
width = 8, height = 10, units = "in",
dpi = 300)
ggplot(emm_soil, aes(x = apex_soilComp, y = emmean, color = apex_soilComp)) +
geom_point(size = 3, position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, position = position_dodge(width = 0.5)) +
facet_wrap(~ CPNM, scales = "free_y") +
labs(y = "Mean Estimated Biomass (kg/ha)",
x = "Soil Type") +
theme_minimal() +
scale_color_npg() +
theme(text = element_text(family = "serif", size = 15),
axis.text.x = element_blank()) +
guides(color = "none")
p2 <- ggplot(emm_soil, aes(x = apex_soilComp, y = emmean, color = apex_soilComp)) +
geom_point(size = 3, position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, position = position_dodge(width = 0.5)) +
facet_wrap(~ CPNM, scales = "free_y") +
labs(y = "Mean Estimated Biomass (kg/ha)",
x = "Soil Type") +
theme_minimal() +
scale_color_npg() +
theme(text = element_text(family = "serif", size = 15),
axis.text.x = element_blank()) +
guides(color = "none")
combined_plot <- p1 / p2 +
plot_annotation(tag_levels = 'a')
combined_plot
# Save combined plot as high-resolution PNG
ggsave("soil_type_panels.png",
plot = combined_plot,
width = 8, height = 10, units = "in",
dpi = 300)
combined_plot <- p1 / p2 +
plot_annotation(tag_levels = '(a)')
combined_plot
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_biomass_accumulated.R", echo = TRUE)
# Load necessary libraries for data manipulation, reading, and visualization
library(tidyverse)   # Includes functions for data wrangling, manipulation, and plotting
library(data.table)  # Fast data manipulation tools
library(ggsci)       # Provides scientific journal color palettes for ggplot
library(patchwork)
library(emmeans)
library(lme4)
# Show plot
final_plot
plot_stress
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_biomass_accumulated.R", echo = TRUE)
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_biomass_accumulated.R", echo = TRUE)
# Prepare and plot
p1 <- PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
theme(text = element_text(family = "serif", size = 15)) +
scale_fill_npg()
View(PastureID_sa92_soilComp)
source("~/GitHub/APEX_spatial-temp-var/1605 biomass/cag_biomass_accumulated.R", echo = TRUE)
##### SOIL TYPE ANALYSIS #######################################################
PastureID_sa92_soilComp <- read.csv("PastureID_ecosite_92subareas.csv")
# Prepare and plot
p1 <- PastureID_sa92_soilComp %>%
count(Ecosite, apex_soilComp) %>%
ggplot(aes(x = Ecosite, y = n, fill = apex_soilComp)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Ecological Site", y = "Frequency", fill = "Soil Type") +
theme_minimal() +
theme(text = element_text(family = "serif", size = 15)) +
scale_fill_npg()
biomass_spatial_plot_soilComp <- biomass_summary_spatial_plot %>%
left_join(PastureID_sa92_soilComp)
model_biomass_soil <- lmer(cumulative_DDMkg_ha ~ apex_soilComp * CPNM + Y + # fixed effects
(1 | Block), # random effect
biomass_spatial_plot_soilComp)
summary(model_biomass_soil)
emm_soil <- emmeans(model_biomass_soil, ~ apex_soilComp | CPNM)
pairs(emm_soil, adjust = "Tukey")
emm_soil <- as.data.frame(emm_soil)
p2 <- ggplot(emm_soil, aes(x = apex_soilComp, y = emmean, color = apex_soilComp)) +
geom_point(size = 3, position = position_dodge(width = 0.5)) +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL),
width = 0.2, position = position_dodge(width = 0.5)) +
facet_wrap(~ CPNM, scales = "free_y") +
labs(y = "Mean Estimated Biomass (kg/ha)",
x = "Soil Type") +
theme_minimal() +
scale_color_npg() +
theme(text = element_text(family = "serif", size = 15),
axis.text.x = element_blank()) +
guides(color = "none")
combined_plot <- p1 / p2 +
plot_annotation(tag_levels = 'a')
combined_plot
# Summarize at pasture-scale
biomass_observed_pasture <- biomass_observed_plot %>%
group_by(Date, Treatment, Pasture, CPNM, Y) %>%
summarize(biomass_pasture = round(mean(MeankgPerHa_plot), 2),
SD = round(sd(MeankgPerHa_plot), 2))
##### PREP for PASTURE LEVEL STATISTICS ########################################
# Prepare the simulated data
sim_data_clean <- biomass_simulated_Aug12 %>%
rename(simulated = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, Sim.Type, simulated)
# Prepare the observed data
obs_data_clean <- biomass_observed_pasture %>%
rename(observed = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, uncertainty)
# Prepare the observed data
obs_data_clean <- biomass_observed_pasture %>%
rename(observed = biomass_pasture) %>%
select(Date, Y, Treatment, Pasture, CPNM, observed, SD)
# Join simulated and observed data on shared keys
comparison_df <- merge(
sim_data_clean,
obs_data_clean,
by = c("Date", "Y", "Treatment", "Pasture", "CPNM")
)
# Reordering columns for excel export
excel_export <- comparison_df %>%
select(Y, Treatment, Pasture, CPNM, Sim.Type,
observed, uncertainty, simulated) %>%
mutate(simulated = round(simulated, 2)) # round by 2 decimal points
# Reordering columns for excel export
excel_export <- comparison_df %>%
select(Y, Treatment, Pasture, CPNM, Sim.Type,
observed, SD, simulated) %>%
mutate(simulated = round(simulated, 2)) # round by 2 decimal points
# Export for Harmel Excel workbook
write.csv(excel_export, "cageBiomass_comparisons_2014-2018.csv")
# Initialize an empty list to store plots
plot_list <- list()
# Iterate through each plant functional group
for (group in plant_functional_groups) {
# Filter data for the current group
biomass_summary_group <- biomass_summary %>% filter(CPNM == group)
observed_data_group <- observed_data_filtered %>% filter(CPNM == group)
# Generate the plot for the current group
plot <- ggplot(biomass_summary_group, aes(x = month_day,
y = mean_DDMkg_ha,
color = Treatment,
group = Treatment,
shape = Treatment)
) +
geom_ribbon(aes(ymin = pmax(mean_DDMkg_ha - sd_DDMkg_ha, 0),
ymax = mean_DDMkg_ha + sd_DDMkg_ha, fill = Treatment),
alpha = 0.2) +
geom_line(linewidth = 1) +
geom_point(data = observed_data_group,
aes(x = month_day, y = MeankgPerHa,
color = Treatment, ),
size = 4, alpha = 1, stroke = 1.2, fill = NA) +
scale_shape_manual(values = 1:2) +
scale_color_npg() +
scale_fill_npg() +
geom_errorbar(data = observed_data_group,
aes(x = month_day, y = MeankgPerHa,
ymin = MeankgPerHa - SDkgPerHa,
ymax = MeankgPerHa + SDkgPerHa),
linewidth = 0.7) +
facet_grid(Sim.Type ~ Y, scales = "free_y") +
scale_x_discrete(breaks = c("01-01", "03-01", "05-01", "07-01", "09-01", "11-01"),
labels = c("Jan", "Mar", "May", "Jul", "Sep", "Nov")) +
labs(
title = paste(group_names[group]),
x = ifelse(group %in% c("CSPG", "WSPG"), "", "Date"),
y = ifelse(group %in% c("WSPG", "VUOC"), "", "Accumulated Biomass (kg/ha)"),
color = "Grazing Treatment",
fill = "Grazing Treatment",
shape = "Grazing Treatment"
) +
theme_minimal(base_family = "serif") +
theme(
strip.text = element_text(size = 12, face = "bold", family = "serif"),
axis.text.x = element_text(angle = 45, hjust = 1, family = "serif", size = 12),
axis.text.y = element_text(family = "serif", size = 12),
axis.title = element_text(family = "serif", size = 14),
legend.text = element_text(family = "serif", size = 12),
legend.title = element_text(family = "serif", size = 14),
plot.title = element_text(size = 16, face = "bold", family = "serif", hjust = 0.5),
legend.position = "bottom"
)
# Conditional ylim
if (group %in% c("CSPG", "WSPG")) {
plot <- plot + coord_cartesian(ylim = c(0, 1250))
} else {
plot <- plot + coord_cartesian(ylim = c(0, 800))
}
# Remove legend for the first two plots
if (group %in% c("CSPG", "WSPG", "FRB3")) {
plot <- plot + theme(legend.position = "none")
}
# Add the plot to the list
plot_list[[group]] <- plot
}
# Combine all plots into one layout
combined_plot <- plot_list[["CSPG"]] + plot_list[["WSPG"]] +
plot_list[["FRB3"]] + plot_list[["VUOC"]] +
plot_layout(ncol = 2)
# Display combined plot
combined_plot
source("~/.active-rstudio-document", echo = TRUE)
# ---- Setup ----
plant_functional_groups <- c("CSPG", "FRB3", "VUOC", "WSPG")
# Tag scenarios (if not already tagged)
biomass_summary_no_var <- biomass_summary_no_var %>% mutate(Sim.Type = "No Variability")
biomass_summary_spatial <- biomass_summary_spatial %>% mutate(Sim.Type = "Spatial Variability")
# Combine
biomass_summary <- bind_rows(biomass_summary_no_var, biomass_summary_spatial)
# Nice names for panel titles
group_names <- c(
CSPG = "CSPG",
WSPG = "WSPG",
FRB3 = "FORB",
VUOC = "CSAG"
)
# ---- Plot builder (per group) ----
plot_list <- list()
for (group in plant_functional_groups) {
# Filter by PFG
sim_g <- biomass_summary %>% filter(CPNM == group)
obs_g <- observed_data_filtered %>% filter(CPNM == group)
p <- ggplot(sim_g, aes(x = month_day, y = mean_DDMkg_ha, group = Sim.Type)) +
# Uncertainty ribbon per scenario
geom_ribbon(aes(ymin = pmax(mean_DDMkg_ha - sd_DDMkg_ha, 0),
ymax = mean_DDMkg_ha + sd_DDMkg_ha,
fill = Sim.Type),
alpha = 0.18) +
# Scenario mean lines (overlayed)
geom_line(aes(color = Sim.Type), linewidth = 1) +
# Observations (single reference layer, no scenario split)
geom_errorbar(data = obs_g,
aes(ymin = MeankgPerHa - SDkgPerHa,
ymax = MeankgPerHa + SDkgPerHa),
width = 0.15, linewidth = 0.6, inherit.aes = FALSE) +
geom_point(data = obs_g,
aes(y = MeankgPerHa), # x is month_day from mapping
size = 2.7, stroke = 0.9, shape = 21, fill = NA, inherit.aes = FALSE) +
# Facet by year only so both scenarios live in the same panel
facet_wrap(~ Y, scales = "free_y", ncol = 1) +
# X axis labels
scale_x_discrete(breaks = c("01-01", "03-01", "05-01", "07-01", "09-01", "11-01"),
labels = c("Jan", "Mar", "May", "Jul", "Sep", "Nov")) +
labs(
title = paste0(group_names[group]),
x = "Date",
y = "Accumulated Biomass (kg/ha)",
color = "Simulation",
fill  = "Simulation"
) +
theme_minimal(base_family = "serif") +
theme(
strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
axis.text.y = element_text(size = 11),
axis.title  = element_text(size = 13),
legend.position = "bottom",
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
# Optional: common y-limits by group
p <- if (group %in% c("CSPG", "WSPG")) p + coord_cartesian(ylim = c(0, 1250))
else                               p + coord_cartesian(ylim = c(0, 800))
plot_list[[group]] <- p
}
# ---- Combine into a single patchwork layout ----
# (Requires patchwork)
combined_plot <- plot_list[["CSPG"]] + plot_list[["WSPG"]] +
plot_list[["FRB3"]] + plot_list[["VUOC"]] +
patchwork::plot_layout(ncol = 2)
# ---- Combine into a single patchwork layout ----
# (Requires patchwork)
combined_plot <- plot_list[["CSPG"]] + plot_list[["WSPG"]] +
plot_list[["FRB3"]] + plot_list[["VUOC"]] +
patchwork::plot_layout(ncol = 2)
# Print/return ggplot object
combined_plot
for (group in plant_functional_groups) {
# Filter by PFG
sim_g <- biomass_summary %>% filter(CPNM == group)
obs_g <- observed_data_filtered %>% filter(CPNM == group)
p <- ggplot(sim_g, aes(x = month_day, y = mean_DDMkg_ha, group = Sim.Type)) +
# Uncertainty ribbon per scenario
geom_ribbon(aes(ymin = pmax(mean_DDMkg_ha - sd_DDMkg_ha, 0),
ymax = mean_DDMkg_ha + sd_DDMkg_ha,
fill = Sim.Type),
alpha = 0.18) +
# Scenario mean lines (overlayed)
geom_line(aes(color = Sim.Type), linewidth = 1) +
# Observations (single reference layer, no scenario split)
geom_errorbar(data = obs_g,
aes(x = month_day, y = MeankgPerHa,
ymin = MeankgPerHa - SDkgPerHa,
ymax = MeankgPerHa + SDkgPerHa),
width = 0.15, linewidth = 0.6, inherit.aes = FALSE) +
geom_point(data = obs_g,
aes(y = MeankgPerHa), # x is month_day from mapping
size = 2.7, stroke = 0.9, shape = 21, fill = NA, inherit.aes = FALSE) +
# Facet by year only so both scenarios live in the same panel
facet_wrap(~ Y, scales = "free_y", ncol = 1) +
# X axis labels
scale_x_discrete(breaks = c("01-01", "03-01", "05-01", "07-01", "09-01", "11-01"),
labels = c("Jan", "Mar", "May", "Jul", "Sep", "Nov")) +
labs(
title = paste0(group_names[group]),
x = "Date",
y = "Accumulated Biomass (kg/ha)",
color = "Simulation",
fill  = "Simulation"
) +
theme_minimal(base_family = "serif") +
theme(
strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
axis.text.y = element_text(size = 11),
axis.title  = element_text(size = 13),
legend.position = "bottom",
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
# Optional: common y-limits by group
p <- if (group %in% c("CSPG", "WSPG")) p + coord_cartesian(ylim = c(0, 1250))
else                               p + coord_cartesian(ylim = c(0, 800))
plot_list[[group]] <- p
}
# ---- Combine into a single patchwork layout ----
# (Requires patchwork)
combined_plot <- plot_list[["CSPG"]] + plot_list[["WSPG"]] +
plot_list[["FRB3"]] + plot_list[["VUOC"]] +
patchwork::plot_layout(ncol = 2)
# Print/return ggplot object
combined_plot
# ---- Plot builder (per group) ----
plot_list <- list()
for (group in plant_functional_groups) {
# Filter by PFG
sim_g <- biomass_summary %>% filter(CPNM == group)
obs_g <- observed_data_filtered %>% filter(CPNM == group)
p <- ggplot(sim_g, aes(x = month_day, y = mean_DDMkg_ha, group = Sim.Type)) +
# Uncertainty ribbon per scenario
geom_ribbon(aes(ymin = pmax(mean_DDMkg_ha - sd_DDMkg_ha, 0),
ymax = mean_DDMkg_ha + sd_DDMkg_ha,
fill = Sim.Type),
alpha = 0.18) +
# Scenario mean lines (overlayed)
geom_line(aes(color = Sim.Type), linewidth = 1) +
# Observations (single reference layer, no scenario split)
geom_errorbar(data = obs_g,
aes(x = month_day, y = MeankgPerHa,
ymin = MeankgPerHa - SDkgPerHa,
ymax = MeankgPerHa + SDkgPerHa),
width = 0.15, linewidth = 0.6, inherit.aes = FALSE) +
geom_point(data = obs_g,
aes(x = month_day,y = MeankgPerHa),
size = 2.7, stroke = 0.9, shape = 21, fill = NA, inherit.aes = FALSE) +
# Facet by year only so both scenarios live in the same panel
facet_wrap(~ Y, scales = "free_y", ncol = 1) +
# X axis labels
scale_x_discrete(breaks = c("01-01", "03-01", "05-01", "07-01", "09-01", "11-01"),
labels = c("Jan", "Mar", "May", "Jul", "Sep", "Nov")) +
labs(
title = paste0(group_names[group]),
x = "Date",
y = "Accumulated Biomass (kg/ha)",
color = "Simulation",
fill  = "Simulation"
) +
theme_minimal(base_family = "serif") +
theme(
strip.text = element_text(size = 12, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
axis.text.y = element_text(size = 11),
axis.title  = element_text(size = 13),
legend.position = "bottom",
plot.title = element_text(size = 15, face = "bold", hjust = 0.5)
)
# Optional: common y-limits by group
p <- if (group %in% c("CSPG", "WSPG")) p + coord_cartesian(ylim = c(0, 1250))
else                               p + coord_cartesian(ylim = c(0, 800))
plot_list[[group]] <- p
}
# ---- Combine into a single patchwork layout ----
# (Requires patchwork)
combined_plot <- plot_list[["CSPG"]] + plot_list[["WSPG"]] +
plot_list[["FRB3"]] + plot_list[["VUOC"]] +
patchwork::plot_layout(ncol = 2)
# Print/return ggplot object
combined_plot
plot_list[["CSPG"]]
plot_list[["WSPG"]]
[["FRB3"]]
plot_list[["FRB3"]]
